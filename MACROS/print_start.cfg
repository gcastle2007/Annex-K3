# PRINT START MACROS
[gcode_macro PRINT_START]
variable_retract: 0
##  User Paramaters
##  BED_TEMP      : Target temperature for the Bed. Is also used to decide 
##                  if heatsoak is needed
##  EXTRUDER_TEMP : Target temperature for the Extruder
##  RETRACT_LEN   : Retract length for firmware retracts
##  RETRACT_SPD   : Retract speed for firmware retracts
##  System Varables
# change this to define the wait time per call
variable_extruder: 245
variable_extruder_pre: 150
variable_bed: 100
variable_print_info: 'true'
## Valid state 
##   Prepare : decision if heat Soak is needed 
##   HeatSoak: loop the time specified with SOAK
##   Final   : all what needs to be done after wait timet
variable_state: 'Prepare'
variable_first: 'true'
variable_soak: 0.35 # midle PWM of Bed
variable_pwm: 1
variable_avgpwm: 1
variable_tests: 0
variable_left: 30
variable_clean2: False
variable_bmeshv: False
#variable_parameter_AREA_START : 0,0
#variable_parameter_AREA_END : 0,0
gcode:
  {% set extruder_temp = params.EXTRUDER_TEMP|default(240)|float %}   # Extruder temperature from Slicer
  {% set bed_temp = params.BED_TEMP|default(80)|float %}              # Bed temperature from Slicer
  {% set E = printer["gcode_macro PRINT_START"].retract|float %}      # Retract - variable from this macros
#  {% set soak = params.SOAK|default(0.25) %}                          # Extruder temperature from Slicer
  {% set soak = printer["gcode_macro PRINT_START"].soak %}                          # Extruder temperature from script
  {% set actPwm = printer.heater_bed.power|float %}                   # Actual PWM from heater_bed.power
  {% set cham_temp = params.CHAMBER|default(40)|float %}
  {% set filament_name = params.FILAMENT%}
  {% set bmesh = params.BMESH|default(False) %}

#############  BED temp values  #############
  # get actual temp from extra sensor or heater sensor
  {% if 'temperature_sensor bed' in printer %}
    {% set actBed = printer['temperature_sensor bed'].temperature|int %}
  {% else %}
    {% set actBed = printer.heater_bed.temperature|int %}
  {% endif %}
  # get max allow bed temp from config. Lower it by 5C to avoid shutdown
  {% set cfg_bed_max = printer.configfile.settings.heater_bed.max_temp|int - 5 %}
#############  Prepare Stage #############
  {% if state == 'Prepare' %}  
    LED_ON                                                                       # LED ON
    SET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0
    _PRINT_AR T="Preparation stage"
    M117 Preparation stage
    {% set bed_temp = params.BED_TEMP|default(80)|int %}
    {% set extruder_temp = params.EXTRUDER_TEMP|default(240)|int %}
    {% set extruder_temp_pre = 150 %}                                               # Extruder temperature prepare (podgotovka pechati)
    {% set soak = printer["gcode_macro PRINT_START"].soak %}                          # Extruder temperature from script
#    G28                                                                          # homing
    _CG28
    G90
    M82
    G1 F18000                                                                    # set default moving speed for X/Y
    G0 F18000                                                                    # set default moving speed for X/Y
    G0 X90 Y90
#    PAUSE_BASE
#############  Variable setup  #############
    CLEAR_PAUSE
    SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=execute VALUE='"false"'                # macros CANCEL_PRINT must have variable "execute" with value "false"
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=extruder VALUE={extruder_temp}          # extruder temperature
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=extruder_pre VALUE={extruder_temp_pre}  # extruder pre-heat
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bed VALUE={bed_temp}                    # target bed temperature
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bmeshv VALUE={bmesh}                    # bed mesh new or not new
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=left VALUE=30                           # counter for PWM calculate
#############  Heating bed  #############
    # start Nevermore if ABS
    # {% if "ABS" in filament_name %} 
    # #      NEVERMORE_ON
    #   SET_FAN_SPEED FAN=Nevermore SPEED=0.95
    # {% else %}
    #   NEVERMORE_OFF
    # {% endif %}
    _PRINT_AR T="Heating Bed"
    {action_respond_info("Heating Bed")}
    M140 S{bed_temp|int}                                                         # start heating bed and not wait
    M104 S{extruder_pre|int}  ; heat bed and wait                                # start extruder pre-heat # ne imeet smasla s CHC Pro
#    G28                                                                          # homing
    # _CG28
    # G90
    # M82
#    G0 Z30 F1500                                                                 # Z to low 30
    # G0 X175 Y175 F20000                                                            # head to center of bed
    M106 S90              ; switch part cooling ~35% to move air in chamber
    M190 S{bed_temp|int}  ; heat bed and wait
    PAUSE_BASE                                                                   # PAUSE!!!!
    {% set pwm = printer['heater_bed'].power | float %}                          # get PWM from heater_bed
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=pwm VALUE={pwm}
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=avgpwm VALUE={pwm}
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=tests VALUE=1
    _PRINT_AR T="{"T:%02d/30 P:%.3f/%.3f" % (left|int,pwm|float,soak|float)}"
    # Call the wait macro the first time
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"HeatSoak"'
    UPDATE_DELAYED_GCODE ID=START_PRINT_WAIT DURATION=0.1
#############  HeatSoak #############
  {% elif state == 'HeatSoak' %}
    M117 HS {'P:%.2f' % (avgpwm*100|float)}{'/%.2f' % (soak|float)}
    {action_respond_info("HeatSoak. PWM: %f" % (avgpwm*100|float))}
    {% if left == 0 %}
      {% if avgpwm >= soak|float %}
        SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=pwm VALUE=0                # PWM reset to zero
        SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=tests VALUE=0              # tests counter reset to zero
        SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=left VALUE=30              # time counter reset to 30 (30 second)
      {% else %}
        {action_respond_info("Done. Mean PWM: %f" % (avgpwm|float))}
        SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"QGL"'
        {action_respond_info("Must made Bed Mesh")}
      {% endif %}
    {% endif %}
    UPDATE_DELAYED_GCODE ID=START_PRINT_WAIT DURATION=1
#############  QGL #############
  {% elif state == 'QGL' %}
#    {% if printer.quad_gantry_level.applied == false %}
#    {% if printer.z_title.applied == false %}
      M106 S0
      M117 Z_TITLE
      _PRINT_AR T="Z_TITLE"
#      SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 LED_ENABLE=1 FUZZ_ENABLE=1
      BED_MESH_CLEAR
#      QUAD_GANTRY_LEVEL
    PROBE_UNDOCK
    Z_TILT_ADJUST
    PROBE_DOCK
#    {% endif %}
    G28 Z
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"BedMesh"'
    UPDATE_DELAYED_GCODE ID=START_PRINT_WAIT DURATION=0.1
#############  Bed Mesh calibrate #############
  {% elif state == 'BedMesh' %}
    _PRINT_AR T="Bed mesh stage"
    {action_respond_info("Bed Mesh Calibrate")}
    {action_respond_info("New bed mesh create")}
    _PRINT_AR T="New bed mesh create"
#    CLEAN_NOZZLE
    PROBE_UNDOCK
    BED_MESH_CALIBRATE ADAPTIVE=1
    PROBE_DOCK
    G90
    G1 X90 Y90 F18000
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Final"'
    UPDATE_DELAYED_GCODE ID=START_PRINT_WAIT DURATION=0.1
#############  Final Stage #############
  {% elif state == 'Final' %}
#    RESUME_BASE
    _PRINT_AR T="Final stage..."
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Prepare"' 
    # set staus back to prepare for the next run     SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Prepare"' 
    G90
    M104 S{extruder|int} ; heat extruder and wait
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder|int} MAXIMUM={extruder|int+1}
    G92 E0                                                                      # reset extruder 
;    CLEAN_NOZZLE
    _PRINT_AR T="Prime Line"
    G1 F18000                                                                    # set default moving speed for X/Y
    G0 F18000                                                                    # set default moving speed for X/Y
    PRIME_LINE
;    LINE_PURGE
    G21
    G90
    G92 E0
    M83
    _PRINT_AR T="Printing..."
    RESUME_BASE
    SET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1
  {% endif %}
#############  Begin of ptinting #############

[delayed_gcode START_PRINT_WAIT]
gcode:
 # Print remaining time
  {% if printer["gcode_macro PRINT_START"].state == 'HeatSoak' %}
      {% set pwm = printer['heater_bed'].power | float %}
      {% set totalpwm = printer["gcode_macro PRINT_START"].pwm|float %}
      {% set tests = printer["gcode_macro PRINT_START"].tests|int + 1 %}
      {% set left = printer["gcode_macro PRINT_START"].left|int - 1 %}
      {% set soak = printer["gcode_macro PRINT_START"].soak | float %}
      {% set avgpwm = ((totalpwm+pwm)/tests)|float %}
      SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=avgpwm VALUE={avgpwm}
      SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=pwm VALUE={(totalpwm+pwm)|float}
      SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=tests VALUE={tests}
      SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=left VALUE={left}
      M117 S{'T:%02d' % left|int}{'/30 P:%.2f' % (avgpwm|float)}{'/%.2f' % (soak|float)}
  {% endif %}
  # Check CANCLE_PRINT was executed
  {% if printer["gcode_macro CANCEL_PRINT"].execute == 'false' %}
    # Jump back to PRINT_START
    PRINT_START
  {% else %}
    # break loop
    # insure state is correct for the next print start
    SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=execute VALUE='"false"'
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Prepare"'
#    UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
  {% endif %}

[gcode_macro _PRINT_AR]
description: Helper: Action response 
gcode:
  #####  set defaults  #####
#  {% set show_lcd = params.SHOW_LCD|default('false') %}
#  {% if show_lcd == 'true' %}
    M117 {'%s' % (params.T|string)}
#  {% endif %}
  {action_respond_info("%s" % (params.T|string))}

[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
gcode:
  {% set E = params.E|default(1.7) %}
#  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  #{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set x_park = -10 %} ; park to buckle
  {% set y_park = 0 %} ; park to buckle
#  {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
#  {% set y_park = printer.toolhead.axis_minimum.y|float + 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  SAVE_GCODE_STATE NAME=PAUSE_state
  M117 Pause
  PAUSE_BASE
  G91
;  G1 E-{E} F2100
  G10
  G1 Z{z_safe} F900
  G90
  G0 X{x_park} Y{y_park} F12000
  G91

[gcode_macro RESUME]
rename_existing: RESUME_BASE
gcode:
    {% set E = params.E|default(1) %}
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    G1 F18000
    G0 F18000
    RESUME_BASE

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
variable_execute: False
gcode:
  ##### end of definitions #####
  SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=execute VALUE='"true"'
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Prepare"'
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}